use crossterm::{
    cursor, style,
    terminal::{self, size},
    ExecutableCommand, QueueableCommand,
};
use rand::Rng;
use std::io::{stdout, Write};

fn main() {
    let (cols, rows) = size().unwrap();

    let mut stdout = stdout();

    terminal::enable_raw_mode().unwrap();

    stdout
        .execute(terminal::Clear(terminal::ClearType::All))
        .unwrap();

    for index in 0..cols {
        let bar_height = rand::thread_rng().gen_range(2..rows);

        for dy in 3..bar_height {
            stdout
                .queue(cursor::MoveTo(index, rows - dy))
                .unwrap()
                .queue(style::Print("#"))
                .unwrap();
        }
    }
    stdout.queue(cursor::MoveTo(0, rows)).unwrap();

    stdout.flush().unwrap();

    terminal::disable_raw_mode().unwrap();
}
